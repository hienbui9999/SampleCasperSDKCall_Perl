=comment
This class generate the parameter for some RPC calls, such as chain_get_state_root_hash,
chain_get_block_transfers, chain_get_block, chain_get_era_info_by_switch_block
The parameter is generated to send the POST method for the above PRCs call.
One sample parameter generated by the BlockIdentifier for chain_get_block RPC call is:
{"method" :  "chain_get_block", "id" :  1, "params" :  {"block_identifier" :  {"Hash" : "d16cb633eea197fec519aee2cfe050fe9a3b7e390642ccae8366455cc91c822e"}}, "jsonrpc" :  "2.0"}
=cut

package Common::BlockIdentifier;

sub new {
	my $class = shift;
	my $self = {
		_blockHash => shift,
		_blockHeight => shift,
		_blockType => shift,
	};
	bless $self, $class;
	return $self;
}

# get-set method for _blockHash
sub setBlockHash {
	my ( $self, $blockHash) = @_;
	$self->{_blockHash} = $blockHash if defined($blockHash);
	return $self->{_blockHash};
}

sub getBlockHash {
	my ( $self ) = @_;
	return $self->{_blockHash};
}

# get-set method for _blockType
sub setBlockType {
	my ( $self, $blockType) = @_;
	$self->{_blockType} = $blockType if defined($blockType);
	return $self->{_blockType};
}

sub getBlockType {
	my ( $self ) = @_;
	return $self->{_blockType};
}

# get-set method for _blockHeight
sub setBlockHeight {
	my ( $self, $blockHeight) = @_;
	$self->{_blockHeight} = $blockHeight if defined($blockHeight);
	return $self->{_blockHeight};
}

sub getBlockHeight {
	my ( $self ) = @_;
	return $self->{_blockHeight};
}

# This function generate the Json string parameter for RPC POST method that use BlockIdentifier as input parameter.
# This function take the RPC name as input and generate the corresponding Json string base on that such method.
# For example with the chain_get_state_root_hash RPC method, when call this function
# simply make the call like this 
# my $generatedParam = Common::BlockIdentifier->generatePostParam($Common::ConstValues::RPC_GET_STATE_ROOT_HASH)
# Then you can pass the $generatedParam variable to the Post method for the chain_get_state_root_hash call to get the state root hash
# Example 2: with the chain_get_block RPC method, when call this function
# simply make the call like this 
# my $generatedParam = Common::BlockIdentifier->generatePostParam($Common::ConstValues::RPC_GET_BLOCK)
# Then you can pass the $generatedParam variable to the Post method for the chain_get_block call to get the block information
# For the const values for RPC method name, see Common::ConstValues package, which defined in file "ConstValues.pm" under folder "Common"
sub generatePostParam {
	my $retStr = "";
	my ( $self ) = @_;
	my @list = @_;
	my $methodName = $list[1];
	my $blockType = $self->{_blockType};
	if ($self->{_blockType} eq "hash") {
		$retStr = '{"method" :  "'.$methodName.'", "id" :  1, "params" :  {"block_identifier" :  {"Hash" : "'.$self->{_blockHash}.'"}}, "jsonrpc" :  "2.0"}';
	} elsif ($self->{_blockType} eq "height") {
		$retStr = '{"method" :  "'.$methodName.'", "id" :  1, "params" :  {"block_identifier" :  {"Height" : '.$self->{_blockHeight}.'}}, "jsonrpc" :  "2.0"}';		
	} elsif ($self->{_blockType} eq "none") {
		$retStr = '{"method" :  "'.$methodName.'", "id" :  1, "params" : [], "jsonrpc" :  "2.0"}';
	} else {
		print "No thing match the Post Param";
	}
	return $retStr;
}

1;
